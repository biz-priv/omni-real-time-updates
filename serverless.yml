service: omni-real-time-updates

provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  versionFunctions: false
  tags: ${self:custom.tags}
  stackTags: ${self:custom.tags}
  iamRoleStatements: # default vpc lambda permissions
    - Effect: "Allow"
      Action:
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
        - "ec2:CreateNetworkInterface"
        - "ec2:DescribeNetworkInterfaces"
        - "ec2:DeleteNetworkInterface"
        - "ec2:AssignPrivateIpAddresses"
        - "ec2:UnassignPrivateIpAddresses"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:DescribeTable"
        - "dynamodb:Query"
        - "dynamodb:GetItem"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "batch:Describe*"
        - "batch:List*"
        - "batch:SubmitJob"
      Resource: "*"

  vpc:
    securityGroupIds:
      - ${ssm:/omni-dw/${self:provider.stage}/lambda/sgId}
    subnetIds:
      - ${ssm:/omni-dw/${self:provider.stage}/lambda/subnetA}
      - ${ssm:/omni-dw/${self:provider.stage}/lambda/subnetB}
  timeout: 30
  runtime: nodejs14.x
  environment:
    REGION: ${self:custom.region}
  deploymentBucket:
    name: ${ssm:/omni-dw/${self:provider.stage}/sls/deployment/bucket}
    serverSideEncryption: AES256

custom:
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  tags:
    Application: OmniRealTimeReplication
    CreateBy: BizCloudExperts
    Environment: ${self:custom.stage}

plugins:
  - serverless-offline
  - serverless-provisioned-concurrency-autoscaling

package:
  individually: true

layers:
  OmniRealTimeReplicationLayer:
    path: lambdaLayer/lib
    name: ${self:service}-layer-${self:provider.stage}
    description: Omni Real Time Replication lambda layer for all node modules - ${self:provider.stage}
    compatibleRuntimes:
      - nodejs14.x
    retain: false

functions:
  shipmentHeaderTrigger: ${file(config/functions/fullLoad/shipmentHeaderTrigger.yml):function}

resources:
  Resources:
    OmniRtBatchServiceRole: ${file(config/batch/omniRt/computeEnvironment.yml):OmniRtBatchServiceRole}
    OmniRtComputeEnvironment: ${file(config/batch/omniRt/computeEnvironment.yml):OmniRtComputeEnvironment}
    ShipmentHeaderJobQueue: ${file(config/batch/omniRt/shipmentHeaderJobQueue.yml):ShipmentHeaderJobQueue}
    OmniRtBatchTaskExecutionRole: ${file(config/batch/omniRt/shipmentHeaderJob.yml):OmniRtBatchTaskExecutionRole}
    ShipmentHeaderJobDefinition: ${file(config/batch/omniRt/shipmentHeaderJob.yml):ShipmentHeaderJobDefinition}
    ShipmentHeaderBatchLogGroup: ${file(config/batch/omniRt/shipmentHeaderJob.yml):ShipmentHeaderBatchLogGroup}
